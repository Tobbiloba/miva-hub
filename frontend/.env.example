# === LLM Provider API Keys ===
# You only need to enter the keys for the providers you plan to use
GOOGLE_GENERATIVE_AI_API_KEY=****
OPENAI_API_KEY=****
XAI_API_KEY=****
ANTHROPIC_API_KEY=****
OPENROUTER_API_KEY=****
OLLAMA_BASE_URL=http://localhost:11434/api
GROQ_API_KEY=****
GROQ_BASE_URL=https://api.groq.com/openai/v1


# (Optional) Default model to use when none is specified
# Format: provider/model (e.g., openRouter/qwen3-8b:free)
E2E_DEFAULT_MODEL=


# === Database ===
# If you don't have PostgreSQL running locally, start it with: pnpm docker:pg
POSTGRES_URL=postgres://your_username:your_password@localhost:5432/your_database_name

# Secret for Better Auth (generate with: npx @better-auth/cli@latest secret)
BETTER_AUTH_SECRET=****

# (Optional)
# URL for Better Auth (the URL you access the app from)
# IMPORTANT: Set this to https://localhost:3000 if using HTTPS locally
# For production, this should match your domain (e.g., https://yourdomain.com)
BETTER_AUTH_URL=

# (Optional)
# === Tools === 
# Exa AI for web search and content extraction (optional, but recommended for @web and research features)
EXA_API_KEY=



# ========================================================================
# === OPTIONAL SETTINGS BELOW (not required for basic functionality) ===
# ========================================================================


# (Optional) Redis for Multi-Instance Support
# When running multiple server instances (load balancing, clustering):
# - With Redis: Real-time MCP synchronization + reduced polling
# - Without Redis: Polling-only synchronization (single instance or dev mode)
# redis://localhost:6379
REDIS_URL=


# (Optional)
# Whether to use file-based MCP config (default: false)
FILE_BASED_MCP_CONFIG=false

# (Optional) 
# === OAuth Settings ===
# Fill in these values only if you want to enable Google/GitHub/Microsoft login

#GitHub
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

#Google
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
# Set to 1 to force account selection
GOOGLE_FORCE_ACCOUNT_SELECTION=


# Microsoft
MICROSOFT_CLIENT_ID=
MICROSOFT_CLIENT_SECRET=
# Optional Tenant Id
MICROSOFT_TENANT_ID=
# Set to 1 to force account selection
MICROSOFT_FORCE_ACCOUNT_SELECTION=

# (Optional)
# Set this to 1 to disable email sign in
DISABLE_EMAIL_SIGN_IN=

# (Optional)
# Set this to 1 to disable user sign-ups.
DISABLE_SIGN_UP=

# (Optional)
# Set this to 1 to disallow adding MCP servers.
NOT_ALLOW_ADD_MCP_SERVERS=

# (Optional)
# Maximum timeout for MCP tool calls in milliseconds (default: no timeout)
# Useful for long-running MCP tools. Example: 600000 (10 minutes)
MCP_MAX_TOTAL_TIMEOUT=


# ========================================================================
# === MIVA UNIVERSITY AWS S3 CONFIGURATION ===
# ========================================================================

# AWS Region (US-based for FERPA compliance)
AWS_REGION=us-east-1

# AWS S3 Configuration for Course Materials Storage
AWS_S3_BUCKET=miva-university-content

# AWS Credentials (Get these from your AWS account IAM console)
# IMPORTANT: Keep these secret and never commit to version control
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here

# CloudFront CDN Configuration (Optional but recommended for performance)
# Set up CloudFront distribution pointing to your S3 bucket
CLOUDFRONT_DOMAIN=your_cloudfront_domain.cloudfront.net

# Content Processor API URL (for AI processing integration)
CONTENT_PROCESSOR_URL=http://localhost:8082
NEXT_PUBLIC_CONTENT_PROCESSOR_URL=http://localhost:8082

# FERPA Compliance and Security
FERPA_AUDIT_ENABLED=true
ENCRYPTION_AT_REST=true

# File Upload Configuration
MAX_FILE_SIZE_MB=100
ALLOWED_FILE_TYPES=pdf,docx,pptx,mp4,mov,avi,mp3,wav,m4a

# Access Control Timeouts (in hours)
STUDENT_ACCESS_DURATION_HOURS=24
FACULTY_ACCESS_DURATION_HOURS=168
ADMIN_ACCESS_DURATION_HOURS=24

# Monitoring and Audit Logging
CLOUDWATCH_LOG_GROUP=/miva-university/s3-access
AUDIT_LOG_RETENTION_DAYS=2555  # 7 years for FERPA compliance
